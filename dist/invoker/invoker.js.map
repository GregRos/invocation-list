{"version":3,"sources":["invoker/invoker.ts"],"names":[],"mappings":"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","file":"invoker/invoker.js","sourcesContent":["/**\r\n * Created by Greg on 26/09/2016.\r\n */\r\n//he invoker is a module responsible for constructing invocation lists.\r\nimport _ = require('lodash');\r\nimport {Errors, InvokerError} from '../errors';\r\nimport Immutable = require('immutable');\r\n\r\nexport module InvocationLists {\r\n\r\n\t//the invoker cache.\r\n\tvar invokers: any = {};\r\n\tvar symbolCache = new Map<string | symbol, symbol>();\r\n\t/**\r\n\t * Retrieves the invocation symbol for a member with the given name.\r\n\t * @param name The name of the member.\r\n\t * @returns {symbol} The invocation symbol.\r\n\t */\r\n\tfunction getSymbol(name: string | symbol) {\r\n\t\tlet symb = symbolCache.get(name);\r\n\t\tif (symb) return symb;\r\n\t\tlet textName = _.isString(name) ? name : name.toString();\r\n\t\tlet invocListSymbol = Symbol(textName);\r\n\t\tsymbolCache.set(name, invocListSymbol);\r\n\t\treturn invocListSymbol;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an invoker for a member with the specified string/symbol name.\r\n\t *\r\n\t * @description\r\n\t * The invoker is a small function that is placed in a key managed by an invocation list.\r\n\t * The invoker accesses the invocation list on the `this` instance and invokes every element using its arguments.\r\n\t * Each string key (and corresponding invocation symbol) has its own invoker, and invokers for the same key on different objects are the same.\r\n\t * @param name The name for which to get the invoker.\r\n\t * @returns {Function} The invoker function.\r\n\t */\r\n\tfunction getInvoker(name: string | symbol): Function {\r\n\t\tlet symbol = getSymbol(name);\r\n\t\tif (invokers[symbol]) {\r\n\t\t\treturn invokers[symbol];\r\n\t\t}\r\n\t\treturn invokers[symbol] = function () {\r\n\t\t\t//this will be the instance this function was called on, not the module or the function object\r\n\t\t\tlet invocationList = this[symbol] as Immutable.List<Function>;\r\n\r\n\t\t\tif (!Immutable.List.isList(invocationList)) {\r\n\t\t\t\tthrow Errors.invalidInvocationList(name, invocationList);\r\n\t\t\t}\r\n\t\t\tlet args = arguments;\r\n\t\t\tlet result: any;\r\n\t\t\tinvocationList.forEach(func => result = func.apply(this, args));\r\n\t\t\t//undefined is always returned!\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Attaches a new function to the invocation list of a member in the given instance.\r\n\t *\r\n\t * @description\r\n\t * This function makes the specified member managed by an invocation list.\r\n\t * Functions can be added to the invocation list for execution, and when the member with this name is called, every function in the invocation list is called in sequence.\r\n\t *\r\n\t * @param thisObj The `this` instance\r\n\t * @param memberName The name of the member to manage.\r\n\t * @param newFunction The new function to add to the invoc list.\r\n\t */\r\n\texport function addInvocation(thisObj: any, memberName: string | symbol, newFunction: Function) {\r\n\t\tif (!_.isFunction(newFunction)) {\r\n\t\t\tthrow Errors.expectedFunction(newFunction);\r\n\t\t}\r\n\t\tif (!memberName || (!_.isString(memberName) && !_.isSymbol(memberName))) {\r\n\t\t\tthrow Errors.expectedIdentifier(memberName);\r\n\t\t}\r\n\r\n\t\tif (!_.isObject(thisObj)) {\r\n\t\t\tthrow Errors.expectedObject(thisObj);\r\n\t\t}\r\n\r\n\t\tlet descriptor = Object.getOwnPropertyDescriptor(thisObj, memberName);\r\n\t\tif (descriptor) {\r\n\t\t\tif (!descriptor.writable) {\r\n\t\t\t\tthrow Errors.propertyNotWriteable(memberName);\r\n\t\t\t}\r\n\t\t\tif (descriptor.get || descriptor.set) {\r\n\t\t\t\tthrow Errors.getterOrSetterNotSupported(memberName);\r\n\t\t\t}\r\n\t\t}\r\n\t\tlet symbol = getSymbol(memberName);\r\n\t\tlet invoker = getInvoker(memberName);\r\n\t\tlet ownList = thisObj[symbol] as Immutable.List<Function>;\r\n\t\tlet ownFunction = thisObj[memberName];\r\n\t\tif (ownFunction !== undefined && !_.isFunction(ownFunction)) {\r\n\t\t\tthrow Errors.memberNotFunction(memberName);\r\n\t\t}\r\n\t\telse if (ownList && ownFunction === invoker) {\r\n\t\t\t//the invocation list exists and the current occupant is the invoker for the member\r\n\r\n\t\t\townList = ownList.push(newFunction);\r\n\t\t} else if (ownList && ownFunction !== invoker) {\r\n\t\t\t//the invocation list exists, but the current function is not the invoker\r\n\t\t\t//meaning it was overriden. We have to create a new invocation list based on the old function.\r\n\r\n\t\t\townList = Immutable.List.of(ownFunction, newFunction)\r\n\t\t} else if (!ownList && !ownFunction) {\r\n\t\t\t//there is no invocation list and there is no function with that name.\r\n\r\n\t\t\townList = Immutable.List.of(newFunction);\r\n\t\t} else if (!ownList && ownFunction === invoker) {\r\n\t\t\t//there is no invocation list but there is a function and it is an invoker\r\n\t\t\t//this is a strange error.\r\n\r\n\t\t\tthrow Errors.invalidInvocationList(memberName, undefined);\r\n\t\t} else if (!ownList && ownFunction) {\r\n\t\t\t//there is no invocation list but there is a function.\r\n\r\n\t\t\townList = Immutable.List.of(ownFunction, newFunction);\r\n\t\t}\r\n\r\n\t\tthisObj[memberName] = invoker;\r\n\t\tthisObj[symbol] = ownList;\r\n\t\t//if the invoker is in place, nothing should be done.\r\n\t}\r\n\r\n\texport function getInvocations(thisObj : any, memberName : string | symbol) : Immutable.List<Function> {\r\n\t\tif (!_.isObject(thisObj) || (!_.isSymbol(memberName) && _.isString(memberName))) {\r\n\t\t\treturn Immutable.List.of<Function>();\r\n\t\t}\r\n\r\n\t\tlet symbol = getSymbol(memberName);\r\n\t\tlet invocationList = thisObj[symbol];\r\n\t\tif (invocationList) {\r\n\t\t\treturn invocationList;\r\n\t\t} else if (_.isFunction(thisObj[memberName])) {\r\n\t\t\treturn Immutable.List.of(thisObj[memberName]);\r\n\t\t} else {\r\n\t\t\treturn Immutable.List.of<Function>();\r\n\t\t}\r\n\t}\r\n}"],"sourceRoot":"/src"}